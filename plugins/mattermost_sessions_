#!/bin/sh
# -*- sh -*-
# 
# Shows number of user sessions in the system.
# Distinct per user (users can have multiple devices
# with sessions, these are combined as 1 session)
#
# Non-expired sessions are sessions which have an
# expiry timestamp in the future
#
# Active sessions are sessions with activity in the
# last 15 minutes.
# 

if [ "$1" = "config" ]; then
  echo "graph_title Mattermost sessions"
  echo "graph_args --lower-limit 0 --base 1000" 
  echo "graph_vlabel number of sessions"
  echo "graph_category mattermost"
  echo "graph_info Number of sessions"
  echo "graph_total Total"
  echo "active.label Recently active"
  echo "active.type GAUGE"
  echo "active.draw AREA"
  echo "valid.label Not expired"
  echo "valid.type GAUGE"
  echo "valid.draw STACK"

  exit 0
fi

# Selects the session with the most recent activity per user.
# If a user was active within the last hour, the sessions is
# counted as "active". If the session is still valid but has
# no recent activity, the session is counted as "valid".

# One hour in milliseconds.
recentlyactiveperiod=3600000

# Measurements:
sudo -u mattermost psql --no-align --field-separator=" " --quiet <<EOF \
        | grep -v label \
        | grep -v rows 
   select 'valid.count', 
          count(userid) 
   from 
   (select sessions.userid     as userid,
             max(lastactivityat) as lastactivityat
        from sessions
        where expiresat > round(extract (epoch from now()) * 1000)
        group by sessions.userid
   ) as activesessions
   where lastactivityat <= round(extract (epoch from now()) * 1000 - ${recentlyactiveperiod})
   union
   select 'active.count', 
          count(userid) 
   from
   (select sessions.userid     as userid,
             max(lastactivityat) as lastactivityat
        from sessions
        where expiresat > round(extract (epoch from now()) * 1000)
        group by sessions.userid
   ) as activesessions
   where lastactivityat > round(extract (epoch from now()) * 1000 - ${recentlyactiveperiod});
EOF
